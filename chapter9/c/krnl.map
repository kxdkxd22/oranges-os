
分配公共符号
公共符号            大小              文件

idt_ptr             0x6               kernel/global.o
task_stack          0x38000           kernel/global.o
k_reenter           0x4               kernel/global.o
gdt                 0x400             kernel/global.o
tty_table           0xc30             kernel/global.o
tss                 0x68              kernel/global.o
nr_current_console  0x4               kernel/global.o
disp_pos            0x4               kernel/global.o
gdt_ptr             0x6               kernel/global.o
idt                 0x800             kernel/global.o
PARTITION_ENTRY     0x10              kernel/hd.o
ticks               0x4               kernel/global.o
console_table       0x30              kernel/global.o
irq_table           0x40              kernel/global.o
p_proc_ready        0x4               kernel/global.o
proc_table          0x428             kernel/global.o

舍弃的输入节

 .note.GNU-stack
                0x0000000000000000        0x0 kernel/start.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/clock.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/tty.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/i8259.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/global.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/proc.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/systask.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/printf.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/vsprintf.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/klib.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/misc.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs/main.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

节 .text 的地址设置到 0x30400
LOAD kernel/kernel.o
LOAD kernel/syscall.o
LOAD kernel/start.o
LOAD kernel/main.o
LOAD kernel/clock.o
LOAD kernel/keyboard.o
LOAD kernel/tty.o
LOAD kernel/console.o
LOAD kernel/i8259.o
LOAD kernel/global.o
LOAD kernel/protect.o
LOAD kernel/proc.o
LOAD kernel/systask.o
LOAD kernel/hd.o
LOAD kernel/printf.o
LOAD kernel/vsprintf.o
LOAD lib/kliba.o
LOAD lib/klib.o
LOAD lib/string.o
LOAD lib/misc.o
LOAD fs/main.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel/kernel.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel/kernel.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel/kernel.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel/kernel.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x0000000000030400     0x52f3
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000030400      0x410 kernel/kernel.o
                0x0000000000030400                _start
                0x0000000000030440                hwint00
                0x0000000000030470                hwint01
                0x00000000000304a0                hwint02
                0x00000000000304d0                hwint03
                0x0000000000030500                hwint04
                0x0000000000030530                hwint05
                0x0000000000030560                hwint06
                0x0000000000030590                hwint07
                0x00000000000305c0                hwint08
                0x00000000000305f0                hwint09
                0x0000000000030620                hwint10
                0x0000000000030650                hwint11
                0x0000000000030680                hwint12
                0x00000000000306b0                hwint13
                0x00000000000306e0                hwint14
                0x0000000000030710                hwint15
                0x0000000000030734                divide_error
                0x000000000003073a                single_step_exception
                0x0000000000030740                nmi
                0x0000000000030746                breakpoint_exception
                0x000000000003074c                overflow
                0x0000000000030752                bounds_check
                0x0000000000030758                inval_opcode
                0x000000000003075e                copr_not_available
                0x0000000000030764                double_fault
                0x0000000000030768                copr_seg_overrun
                0x000000000003076e                inval_tss
                0x0000000000030772                segment_not_present
                0x0000000000030776                stack_exception
                0x000000000003077a                general_protection
                0x000000000003077e                page_fault
                0x0000000000030782                copr_error
                0x00000000000307cb                sys_call
                0x00000000000307eb                restart
 .text          0x0000000000030810       0x20 kernel/syscall.o
                0x0000000000030810                sendrec
                0x0000000000030824                printx
 .text          0x0000000000030830       0x95 kernel/start.o
                0x0000000000030830                cstart
 .text          0x00000000000308c5      0x359 kernel/main.o
                0x00000000000308c5                kernel_main
                0x0000000000030b4c                get_ticks
                0x0000000000030b80                TestA
                0x0000000000030b85                TestB
                0x0000000000030bad                TestC
                0x0000000000030bd5                panic
 .text          0x0000000000030c1e       0xc5 kernel/clock.o
                0x0000000000030c1e                clock_handler
                0x0000000000030c61                milli_delay
                0x0000000000030c8b                init_clock
 .text          0x0000000000030ce3      0x689 kernel/keyboard.o
                0x0000000000030ce3                keyboard_handler
                0x0000000000030d43                init_keyboard
                0x0000000000030de8                keyboard_read
 .text          0x000000000003136c      0x514 kernel/tty.o
                0x000000000003136c                task_tty
                0x0000000000031426                in_process
                0x000000000003168c                tty_write
                0x00000000000316d2                sys_printx
 .text          0x0000000000031880      0x426 kernel/console.o
                0x0000000000031880                init_screen
                0x00000000000319a0                is_current_console
                0x00000000000319bb                out_char
                0x0000000000031c05                select_console
                0x0000000000031c3b                scroll_screen
 .text          0x0000000000031ca6      0x130 kernel/i8259.o
                0x0000000000031ca6                init_8259A
                0x0000000000031d7b                spurious_irq
                0x0000000000031db2                put_irq_handler
 .text          0x0000000000031dd6        0x0 kernel/global.o
 .text          0x0000000000031dd6      0x614 kernel/protect.o
                0x0000000000031dd6                init_prot
                0x00000000000321f3                seg2phys
                0x00000000000322af                exception_handler
 .text          0x00000000000323ea     0x1738 kernel/proc.o
                0x00000000000323ea                schedule
                0x0000000000032476                sys_sendrec
                0x0000000000032594                send_recv
                0x0000000000032651                ldt_seg_linear
                0x000000000003269b                va2la
                0x00000000000326fc                reset_msg
                0x00000000000334f2                inform_int
                0x000000000003366e                dump_proc
                0x0000000000033a14                dump_msg
 .text          0x0000000000033b22       0x58 kernel/systask.o
                0x0000000000033b22                task_sys
 .text          0x0000000000033b7a      0xe13 kernel/hd.o
                0x0000000000033b7a                task_hd
                0x0000000000034962                hd_handler
 .text          0x000000000003498d       0x50 kernel/printf.o
                0x000000000003498d                printf
 .text          0x00000000000349dd      0x309 kernel/vsprintf.o
                0x0000000000034a43                vsprintf
                0x0000000000034cc0                sprintf
 *fill*         0x0000000000034ce6        0xa 
 .text          0x0000000000034cf0      0x19a lib/kliba.o
                0x0000000000034cf0                disp_str
                0x0000000000034d2e                disp_color_str
                0x0000000000034d6d                out_byte
                0x0000000000034d79                in_byte
                0x0000000000034d83                port_read
                0x0000000000034d96                port_write
                0x0000000000034da9                disable_irq
                0x0000000000034dde                enable_irq
                0x0000000000034dfd                disable_int
                0x0000000000034dff                enable_int
                0x0000000000034e01                glitter
 .text          0x0000000000034e8a      0x119 lib/klib.o
                0x0000000000034e8a                itoa
                0x0000000000034f35                disp_int
                0x0000000000034f5c                delay
 *fill*         0x0000000000034fa3        0xd 
 .text          0x0000000000034fb0       0x78 lib/string.o
                0x0000000000034fb0                memcpy
                0x0000000000034fd9                memset
                0x0000000000034ffa                strcpy
                0x0000000000035012                strlen
 .text          0x0000000000035028       0x54 lib/misc.o
                0x0000000000035028                spin
                0x0000000000035043                assertion_failure
 .text          0x000000000003507c      0x677 fs/main.o
                0x000000000003507c                task_fs
                0x000000000003565a                rw_sector
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x0000000000035700     0x1067
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000035700       0x47 kernel/start.o
 *fill*         0x0000000000035747        0x1 
 .rodata        0x0000000000035748       0x34 kernel/main.o
 .rodata        0x000000000003577c       0x64 kernel/keyboard.o
 .rodata        0x00000000000357e0       0x90 kernel/tty.o
 .rodata        0x0000000000035870       0x11 kernel/i8259.o
 *fill*         0x0000000000035881        0x3 
 .rodata        0x0000000000035884        0x4 kernel/global.o
                0x0000000000035884                FSBUF_SIZE
 *fill*         0x0000000000035888       0x18 
 .rodata        0x00000000000358a0      0x540 kernel/protect.o
 .rodata        0x0000000000035de0      0x63e kernel/proc.o
 .rodata        0x000000000003641e       0x11 kernel/systask.o
 *fill*         0x000000000003642f        0x1 
 .rodata        0x0000000000036430      0x1ba kernel/hd.o
 *fill*         0x00000000000365ea        0x2 
 .rodata        0x00000000000365ec       0x61 lib/misc.o
 *fill*         0x000000000003664d        0x3 
 .rodata        0x0000000000036650      0x117 fs/main.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x0000000000036768      0xacc
 *(.eh_frame)
 .eh_frame      0x0000000000036768       0x38 kernel/start.o
 .eh_frame      0x00000000000367a0       0xb0 kernel/main.o
                                         0xc8 (松开之前的大小)
 .eh_frame      0x0000000000036850       0x60 kernel/clock.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x00000000000368b0       0xe0 kernel/keyboard.o
                                         0xf8 (松开之前的大小)
 .eh_frame      0x0000000000036990       0xfc kernel/tty.o
                                        0x114 (松开之前的大小)
 .eh_frame      0x0000000000036a8c      0x100 kernel/console.o
                                        0x118 (松开之前的大小)
 .eh_frame      0x0000000000036b8c       0x60 kernel/i8259.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000036bec       0xb0 kernel/protect.o
                                         0xc8 (松开之前的大小)
 .eh_frame      0x0000000000036c9c      0x1d8 kernel/proc.o
                                        0x1f0 (松开之前的大小)
 .eh_frame      0x0000000000036e74       0x1c kernel/systask.o
                                         0x34 (松开之前的大小)
 .eh_frame      0x0000000000036e90      0x1f4 kernel/hd.o
                                        0x20c (松开之前的大小)
 .eh_frame      0x0000000000037084       0x20 kernel/printf.o
                                         0x38 (松开之前的大小)
 .eh_frame      0x00000000000370a4       0x64 kernel/vsprintf.o
                                         0x7c (松开之前的大小)
 .eh_frame      0x0000000000037108       0x60 lib/klib.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000037168       0x3c lib/misc.o
                                         0x54 (松开之前的大小)
 .eh_frame      0x00000000000371a4       0x90 fs/main.o
                                         0xa8 (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000039000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000039000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x0000000000039000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x0000000000039000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x0000000000039000        0x0
 *(.got)
 .got           0x0000000000039000        0x0 kernel/kernel.o
 *(.igot)
                0x0000000000039000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x0000000000039000        0x0
 *(.got.plt)
 .got.plt       0x0000000000039000        0x0 kernel/kernel.o
 *(.igot.plt)
 .igot.plt      0x0000000000039000        0x0 kernel/kernel.o

.data           0x0000000000039000      0x760
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000039000        0x2 kernel/kernel.o
 .data          0x0000000000039002        0x0 kernel/start.o
 .data          0x0000000000039002        0x0 kernel/main.o
 .data          0x0000000000039002        0x0 kernel/clock.o
 *fill*         0x0000000000039002       0x1e 
 .data          0x0000000000039020      0x600 kernel/keyboard.o
                0x0000000000039020                keymap
 .data          0x0000000000039620        0x0 kernel/tty.o
 .data          0x0000000000039620        0x0 kernel/console.o
 .data          0x0000000000039620        0x0 kernel/i8259.o
 .data          0x0000000000039620      0x140 kernel/global.o
                0x0000000000039620                task_table
                0x00000000000396c0                user_proc_table
                0x0000000000039738                sys_call_table
                0x0000000000039744                dd_map
                0x000000000003975c                fsbuf
 .data          0x0000000000039760        0x0 kernel/protect.o
 .data          0x0000000000039760        0x0 kernel/proc.o
 .data          0x0000000000039760        0x0 kernel/systask.o
 .data          0x0000000000039760        0x0 kernel/hd.o
 .data          0x0000000000039760        0x0 kernel/printf.o
 .data          0x0000000000039760        0x0 kernel/vsprintf.o
 .data          0x0000000000039760        0x0 lib/klib.o
 .data          0x0000000000039760        0x0 lib/misc.o
 .data          0x0000000000039760        0x0 fs/main.o

.data1
 *(.data1)
                0x0000000000039760                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x0000000000039760                . = .
                0x0000000000039760                __bss_start = .

.bss            0x0000000000039760    0x3acb8
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000039760      0x800 kernel/kernel.o
 .bss           0x0000000000039f60        0x0 kernel/start.o
 .bss           0x0000000000039f60        0x0 kernel/main.o
 .bss           0x0000000000039f60        0x0 kernel/clock.o
 .bss           0x0000000000039f60       0x58 kernel/keyboard.o
 .bss           0x0000000000039fb8        0x0 kernel/tty.o
 .bss           0x0000000000039fb8        0x0 kernel/console.o
 .bss           0x0000000000039fb8        0x0 kernel/i8259.o
 .bss           0x0000000000039fb8        0x0 kernel/global.o
 .bss           0x0000000000039fb8        0x0 kernel/protect.o
 .bss           0x0000000000039fb8        0x0 kernel/proc.o
 .bss           0x0000000000039fb8        0x0 kernel/systask.o
 *fill*         0x0000000000039fb8        0x8 
 .bss           0x0000000000039fc0      0x64c kernel/hd.o
 .bss           0x000000000003a60c        0x0 kernel/printf.o
 .bss           0x000000000003a60c        0x0 kernel/vsprintf.o
 .bss           0x000000000003a60c        0x0 lib/klib.o
 .bss           0x000000000003a60c        0x0 lib/misc.o
 .bss           0x000000000003a60c        0x0 fs/main.o
 *(COMMON)
 *fill*         0x000000000003a60c       0x14 
 COMMON         0x000000000003a620    0x39de8 kernel/global.o
                0x000000000003a620                idt_ptr
                0x000000000003a640                task_stack
                0x0000000000072640                k_reenter
                0x0000000000072660                gdt
                0x0000000000072a60                tty_table
                0x00000000000736a0                tss
                0x0000000000073708                nr_current_console
                0x000000000007370c                disp_pos
                0x0000000000073710                gdt_ptr
                0x0000000000073720                idt
                0x0000000000073f20                ticks
                0x0000000000073f40                console_table
                0x0000000000073f80                irq_table
                0x0000000000073fc0                p_proc_ready
                0x0000000000073fe0                proc_table
 COMMON         0x0000000000074408       0x10 kernel/hd.o
                0x0000000000074408                PARTITION_ENTRY
                0x0000000000074418                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000074418                . = ALIGN (0x4)
                0x0000000000074418                . = SEGMENT_START ("ldata-segment", .)
                0x0000000000074418                . = ALIGN (0x4)
                0x0000000000074418                _end = .
                [!provide]                        PROVIDE (end = .)
                0x0000000000074418                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel/start.o
                                         0x2d (松开之前的大小)
 .comment       0x000000000000002c       0x2d kernel/main.o
 .comment       0x000000000000002c       0x2d kernel/clock.o
 .comment       0x000000000000002c       0x2d kernel/keyboard.o
 .comment       0x000000000000002c       0x2d kernel/tty.o
 .comment       0x000000000000002c       0x2d kernel/console.o
 .comment       0x000000000000002c       0x2d kernel/i8259.o
 .comment       0x000000000000002c       0x2d kernel/global.o
 .comment       0x000000000000002c       0x2d kernel/protect.o
 .comment       0x000000000000002c       0x2d kernel/proc.o
 .comment       0x000000000000002c       0x2d kernel/systask.o
 .comment       0x000000000000002c       0x2d kernel/hd.o
 .comment       0x000000000000002c       0x2d kernel/printf.o
 .comment       0x000000000000002c       0x2d kernel/vsprintf.o
 .comment       0x000000000000002c       0x2d lib/klib.o
 .comment       0x000000000000002c       0x2d lib/misc.o
 .comment       0x000000000000002c       0x2d fs/main.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.gnu_object_only)
OUTPUT(kernel.bin elf32-i386)
